<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.august.cms.mapper.SGoodsMapper">
  <resultMap id="BaseResultMap" type="com.august.cms.domain.SGoods">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="cats_id" jdbcType="INTEGER" property="catsId" />
    <result column="goods_price_old" jdbcType="VARCHAR" property="goodsPriceOld" />
    <result column="goods_price_new" jdbcType="INTEGER" property="goodsPriceNew" />
    <result column="goods_delete" jdbcType="INTEGER" property="goodsDelete" />
    <result column="goods_info" jdbcType="VARCHAR" property="goodsInfo" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="goods_src" jdbcType="VARCHAR" property="goodsSrc" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.august.cms.domain.SGoods">
    <result column="goods_img" jdbcType="LONGVARCHAR" property="goodsImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_name, `type`, cats_id, goods_price_old, goods_price_new, goods_delete, 
    goods_info, goods_number, goods_src, parent_id
  </sql>
  <sql id="Blob_Column_List">
    goods_img
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.august.cms.domain.SGoodsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.august.cms.domain.SGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.august.cms.domain.SGoodsExample">
    delete from s_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.august.cms.domain.SGoods">
    insert into s_goods (goods_id, goods_name, `type`, 
      cats_id, goods_price_old, goods_price_new, 
      goods_delete, goods_info, goods_number, 
      goods_src, parent_id, goods_img
      )
    values (#{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{catsId,jdbcType=INTEGER}, #{goodsPriceOld,jdbcType=VARCHAR}, #{goodsPriceNew,jdbcType=INTEGER}, 
      #{goodsDelete,jdbcType=INTEGER}, #{goodsInfo,jdbcType=VARCHAR}, #{goodsNumber,jdbcType=INTEGER}, 
      #{goodsSrc,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{goodsImg,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.august.cms.domain.SGoods">
    insert into s_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="catsId != null">
        cats_id,
      </if>
      <if test="goodsPriceOld != null">
        goods_price_old,
      </if>
      <if test="goodsPriceNew != null">
        goods_price_new,
      </if>
      <if test="goodsDelete != null">
        goods_delete,
      </if>
      <if test="goodsInfo != null">
        goods_info,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="goodsSrc != null">
        goods_src,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="catsId != null">
        #{catsId,jdbcType=INTEGER},
      </if>
      <if test="goodsPriceOld != null">
        #{goodsPriceOld,jdbcType=VARCHAR},
      </if>
      <if test="goodsPriceNew != null">
        #{goodsPriceNew,jdbcType=INTEGER},
      </if>
      <if test="goodsDelete != null">
        #{goodsDelete,jdbcType=INTEGER},
      </if>
      <if test="goodsInfo != null">
        #{goodsInfo,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="goodsSrc != null">
        #{goodsSrc,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.august.cms.domain.SGoodsExample" resultType="java.lang.Long">
    select count(*) from s_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_goods
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.catsId != null">
        cats_id = #{record.catsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsPriceOld != null">
        goods_price_old = #{record.goodsPriceOld,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPriceNew != null">
        goods_price_new = #{record.goodsPriceNew,jdbcType=INTEGER},
      </if>
      <if test="record.goodsDelete != null">
        goods_delete = #{record.goodsDelete,jdbcType=INTEGER},
      </if>
      <if test="record.goodsInfo != null">
        goods_info = #{record.goodsInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNumber != null">
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSrc != null">
        goods_src = #{record.goodsSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsImg != null">
        goods_img = #{record.goodsImg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update s_goods
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      cats_id = #{record.catsId,jdbcType=INTEGER},
      goods_price_old = #{record.goodsPriceOld,jdbcType=VARCHAR},
      goods_price_new = #{record.goodsPriceNew,jdbcType=INTEGER},
      goods_delete = #{record.goodsDelete,jdbcType=INTEGER},
      goods_info = #{record.goodsInfo,jdbcType=VARCHAR},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      goods_src = #{record.goodsSrc,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      goods_img = #{record.goodsImg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_goods
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      cats_id = #{record.catsId,jdbcType=INTEGER},
      goods_price_old = #{record.goodsPriceOld,jdbcType=VARCHAR},
      goods_price_new = #{record.goodsPriceNew,jdbcType=INTEGER},
      goods_delete = #{record.goodsDelete,jdbcType=INTEGER},
      goods_info = #{record.goodsInfo,jdbcType=VARCHAR},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      goods_src = #{record.goodsSrc,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.august.cms.domain.SGoods">
    update s_goods
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="catsId != null">
        cats_id = #{catsId,jdbcType=INTEGER},
      </if>
      <if test="goodsPriceOld != null">
        goods_price_old = #{goodsPriceOld,jdbcType=VARCHAR},
      </if>
      <if test="goodsPriceNew != null">
        goods_price_new = #{goodsPriceNew,jdbcType=INTEGER},
      </if>
      <if test="goodsDelete != null">
        goods_delete = #{goodsDelete,jdbcType=INTEGER},
      </if>
      <if test="goodsInfo != null">
        goods_info = #{goodsInfo,jdbcType=VARCHAR},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="goodsSrc != null">
        goods_src = #{goodsSrc,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.august.cms.domain.SGoods">
    update s_goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      cats_id = #{catsId,jdbcType=INTEGER},
      goods_price_old = #{goodsPriceOld,jdbcType=VARCHAR},
      goods_price_new = #{goodsPriceNew,jdbcType=INTEGER},
      goods_delete = #{goodsDelete,jdbcType=INTEGER},
      goods_info = #{goodsInfo,jdbcType=VARCHAR},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      goods_src = #{goodsSrc,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      goods_img = #{goodsImg,jdbcType=LONGVARCHAR}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.august.cms.domain.SGoods">
    update s_goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      cats_id = #{catsId,jdbcType=INTEGER},
      goods_price_old = #{goodsPriceOld,jdbcType=VARCHAR},
      goods_price_new = #{goodsPriceNew,jdbcType=INTEGER},
      goods_delete = #{goodsDelete,jdbcType=INTEGER},
      goods_info = #{goodsInfo,jdbcType=VARCHAR},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      goods_src = #{goodsSrc,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
</mapper>